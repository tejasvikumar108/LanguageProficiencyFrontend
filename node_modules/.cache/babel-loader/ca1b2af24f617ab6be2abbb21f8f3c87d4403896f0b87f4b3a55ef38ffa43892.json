{"ast":null,"code":"var _jsxFileName = \"D:\\\\6th sem\\\\LPU_Codes\\\\SemProjects\\\\React and Node\\\\fluency-track\\\\src\\\\Components\\\\Vocab\\\\Vocab.jsx\",\n  _s = $RefreshSig$();\n// import React, {useState, useEffect} from 'react';\n// import './Vocab.css'\n\n// const Vocab = () => {\n\n//     const [questions, setQuestions] = useState([]);\n//     const [currentQuestion, setCurrentQuestion] = useState(0);\n//     const [selectedOption, setSelectedOption] = useState('');\n//     const [score, setScore] = useState(0);\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 const api = await fetch(\"/hindiVocab\");\n//                 const res = await api.json();\n//                 console.log(res); // Check the response structure\n//                 if (res && res.data && res.data.length > 0) {\n//                     // Set the fetched questions to the state\n//                     setQuestions(res.data);\n//                 } else {\n//                     console.log(\"No data received from the API.\");\n//                 }\n//             } catch (e) {\n//                 console.log(e);\n//             }\n//         };\n//         fetchData();\n//     }, []);\n\n//     const handleOptionSelect = (option) => {\n//         setSelectedOption(option);\n//     };\n\n//     const handleNextQuestion = () => {\n//         if (selectedOption === questions[currentQuestion].correctAnswer) {\n//             setScore(score + 1);\n//         }\n//         setSelectedOption('');\n//         setCurrentQuestion(currentQuestion + 1);\n//     };\n\n//   return (\n//     <>\n//         <div className='box'>\n// {/* <div className='que'>The question will be here?</div>\n// <div class=\"options\">\n//     <div class=\"option\">Option 1</div>\n//     <div class=\"option\">Option 2</div>\n//     <div class=\"option\">Option 3</div>\n//     <div class=\"option\">Option 4</div>\n// </div>\n// <div className='btns'>\n//     <div className='bt' style={{backgroundColor:\"orange\",borderBottomLeftRadius:'11px'}}>Reset</div>\n//     <div className='bt' style={{backgroundColor:\"green\"}} onClick={handleNextQuestion}>Save & Next</div>\n//     <div className='bt' style={{backgroundColor:\"red\",borderBottomRightRadius:\"11px\"}}>Exit</div>\n// </div> */}\n\n//             <div className='que'>{questions[currentQuestion].question}</div>\n\n//             <div className=\"options\">\n//                 {questions[currentQuestion].options.map((option, index) => (\n//                     <div key={index} className=\"option\">{option}</div>\n//                 ))}\n//             </div>\n\n//             <div className='btns'>\n//                 <div className='bt' style={{backgroundColor:\"orange\",borderBottomLeftRadius:'11px'}}>Reset</div>\n//                 {/* <div className='bt' style={{backgroundColor:\"green\"}}>Save & Next</div> */}\n//                 <div className='bt' style={{backgroundColor:\"green\"}} onClick={handleNextQuestion}>Save & Next</div>\n//                 <div className='bt' style={{backgroundColor:\"red\",borderBottomRightRadius:\"11px\"}}>Exit</div>\n//             </div>\n\n//         </div>\n//     </>\n//   )\n// }\n\n// export default Vocab\n\nimport React, { useState, useEffect } from 'react';\nimport './Vocab.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Vocab = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true); // Added loading state\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const api = await fetch(\"/hindiVocab\");\n        const res = await api.json();\n        console.log(res);\n        if (res && res.data && res.data.length > 0) {\n          setQuestions(res.data);\n          setLoading(false);\n        } else {\n          console.log(\"No data received from the API.\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const handleNextQuestion = () => {\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    setSelectedOption('');\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  // Added loading check to render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Added check for end of questions array\n  if (currentQuestion >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"que\",\n      children: questions[currentQuestion].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        onClick: () => handleOptionSelect(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bt\",\n        style: {\n          backgroundColor: \"orange\",\n          borderBottomLeftRadius: '11px'\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bt\",\n        style: {\n          backgroundColor: \"green\"\n        },\n        onClick: handleNextQuestion,\n        children: \"Save & Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bt\",\n        style: {\n          backgroundColor: \"red\",\n          borderBottomRightRadius: \"11px\"\n        },\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n_s(Vocab, \"Ovanj7ESfuCjzKXdiy8rprwyV7s=\");\n_c = Vocab;\nexport default Vocab;\nvar _c;\n$RefreshReg$(_c, \"Vocab\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Vocab","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","loading","setLoading","fetchData","api","fetch","res","json","console","log","data","length","e","handleOptionSelect","option","handleNextQuestion","correctAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","className","question","options","map","index","onClick","style","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","_c","$RefreshReg$"],"sources":["D:/6th sem/LPU_Codes/SemProjects/React and Node/fluency-track/src/Components/Vocab/Vocab.jsx"],"sourcesContent":["// import React, {useState, useEffect} from 'react';\r\n// import './Vocab.css'\r\n\r\n// const Vocab = () => {\r\n    \r\n//     const [questions, setQuestions] = useState([]);\r\n//     const [currentQuestion, setCurrentQuestion] = useState(0);\r\n//     const [selectedOption, setSelectedOption] = useState('');\r\n//     const [score, setScore] = useState(0);\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             try {\r\n//                 const api = await fetch(\"/hindiVocab\");\r\n//                 const res = await api.json();\r\n//                 console.log(res); // Check the response structure\r\n//                 if (res && res.data && res.data.length > 0) {\r\n//                     // Set the fetched questions to the state\r\n//                     setQuestions(res.data);\r\n//                 } else {\r\n//                     console.log(\"No data received from the API.\");\r\n//                 }\r\n//             } catch (e) {\r\n//                 console.log(e);\r\n//             }\r\n//         };\r\n//         fetchData();\r\n//     }, []);\r\n    \r\n\r\n//     const handleOptionSelect = (option) => {\r\n//         setSelectedOption(option);\r\n//     };\r\n\r\n//     const handleNextQuestion = () => {\r\n//         if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n//             setScore(score + 1);\r\n//         }\r\n//         setSelectedOption('');\r\n//         setCurrentQuestion(currentQuestion + 1);\r\n//     };\r\n\r\n\r\n\r\n//   return (\r\n//     <>\r\n//         <div className='box'>\r\n            // {/* <div className='que'>The question will be here?</div>\r\n            // <div class=\"options\">\r\n            //     <div class=\"option\">Option 1</div>\r\n            //     <div class=\"option\">Option 2</div>\r\n            //     <div class=\"option\">Option 3</div>\r\n            //     <div class=\"option\">Option 4</div>\r\n            // </div>\r\n            // <div className='btns'>\r\n            //     <div className='bt' style={{backgroundColor:\"orange\",borderBottomLeftRadius:'11px'}}>Reset</div>\r\n            //     <div className='bt' style={{backgroundColor:\"green\"}} onClick={handleNextQuestion}>Save & Next</div>\r\n            //     <div className='bt' style={{backgroundColor:\"red\",borderBottomRightRadius:\"11px\"}}>Exit</div>\r\n            // </div> */}\r\n\r\n\r\n\r\n\r\n//             <div className='que'>{questions[currentQuestion].question}</div>\r\n            \r\n//             <div className=\"options\">\r\n//                 {questions[currentQuestion].options.map((option, index) => (\r\n//                     <div key={index} className=\"option\">{option}</div>\r\n//                 ))}\r\n//             </div>\r\n\r\n//             <div className='btns'>\r\n//                 <div className='bt' style={{backgroundColor:\"orange\",borderBottomLeftRadius:'11px'}}>Reset</div>\r\n//                 {/* <div className='bt' style={{backgroundColor:\"green\"}}>Save & Next</div> */}\r\n//                 <div className='bt' style={{backgroundColor:\"green\"}} onClick={handleNextQuestion}>Save & Next</div>\r\n//                 <div className='bt' style={{backgroundColor:\"red\",borderBottomRightRadius:\"11px\"}}>Exit</div>\r\n//             </div>\r\n            \r\n            \r\n\r\n//         </div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Vocab\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Vocab.css';\r\n\r\nconst Vocab = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [loading, setLoading] = useState(true); // Added loading state\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const api = await fetch(\"/hindiVocab\");\r\n                const res = await api.json();\r\n                console.log(res);\r\n                if (res && res.data && res.data.length > 0) {\r\n                    setQuestions(res.data);\r\n                    setLoading(false);\r\n                } else {\r\n                    console.log(\"No data received from the API.\");\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleOptionSelect = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n            setScore(score + 1);\r\n        }\r\n        setSelectedOption('');\r\n        setCurrentQuestion(currentQuestion + 1);\r\n    };\r\n\r\n    // Added loading check to render loading state\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // Added check for end of questions array\r\n    if (currentQuestion >= questions.length) {\r\n        return (\r\n            <div>\r\n                <h2>Quiz Completed!</h2>\r\n                <p>Your score: {score} / {questions.length}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='box'>\r\n            {/* <div className='que'>The question will be here?</div>\r\n            <div class=\"options\">\r\n                <div class=\"option\">Option 1</div>\r\n                <div class=\"option\">Option 2</div>\r\n                <div class=\"option\">Option 3</div>\r\n                <div class=\"option\">Option 4</div>\r\n            </div>\r\n            <div className='btns'>\r\n                <div className='bt' style={{backgroundColor:\"orange\",borderBottomLeftRadius:'11px'}}>Reset</div>\r\n                <div className='bt' style={{backgroundColor:\"green\"}} onClick={handleNextQuestion}>Save & Next</div>\r\n                <div className='bt' style={{backgroundColor:\"red\",borderBottomRightRadius:\"11px\"}}>Exit</div>\r\n            </div> */}\r\n            <div className='que'>{questions[currentQuestion].question}</div>\r\n            <div className=\"options\">\r\n                {questions[currentQuestion].options.map((option, index) => (\r\n                    <div key={index} className=\"option\" onClick={() => handleOptionSelect(option)}>{option}</div>\r\n                ))}\r\n            </div>\r\n            <div className='btns'>\r\n                <div className='bt' style={{backgroundColor:\"orange\",borderBottomLeftRadius:'11px'}}>Reset</div>\r\n                <div className='bt' style={{backgroundColor:\"green\"}} onClick={handleNextQuestion}>Save & Next</div>\r\n                <div className='bt' style={{backgroundColor:\"red\",borderBottomRightRadius:\"11px\"}}>Exit</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Vocab;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}