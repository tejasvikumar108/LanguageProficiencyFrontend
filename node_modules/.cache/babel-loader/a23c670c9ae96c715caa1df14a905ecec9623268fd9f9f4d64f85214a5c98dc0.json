{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tejas\\\\Documents\\\\React and Node\\\\fluency-track\\\\src\\\\Components\\\\ErrorCorrection\\\\ErrorCorrection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ErrorCorrection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ErrorCorrection = props => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [isCompleted, setIsCompleted] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const api = await fetch(props.ecApi);\n        const res = await api.json();\n        console.log(res);\n        if (res && res.data && res.data.length > 0) {\n          setQuestions(res.data);\n          setLoading(false);\n        } else {\n          console.log(\"No data received from the API.\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const handleNextQuestion = () => {\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    setSelectedOption('');\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  const handleReset = () => {\n    setSelectedOption('');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  }\n  if (isCompleted || currentQuestion >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box end\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your proficiency score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"learn\",\n        children: \"Test Your Error Correction Knowledge!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"que\",\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `option ${selectedOption === option ? 'selected' : ''}`,\n          onClick: () => handleOptionSelect(option),\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bt\",\n          style: {\n            backgroundColor: \"orange\",\n            borderBottomLeftRadius: '11px'\n          },\n          onClick: handleReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bt\",\n          style: {\n            backgroundColor: \"green\"\n          },\n          onClick: handleNextQuestion,\n          children: \"Save & Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bt\",\n          style: {\n            backgroundColor: \"red\",\n            borderBottomRightRadius: \"11px\"\n          },\n          onClick: () => setIsCompleted(true),\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ErrorCorrection, \"OGksnfOrJdNXmXlJQc7a9sQpqbk=\");\n_c = ErrorCorrection;\nexport default ErrorCorrection;\nvar _c;\n$RefreshReg$(_c, \"ErrorCorrection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ErrorCorrection","props","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","loading","setLoading","isCompleted","setIsCompleted","fetchData","api","fetch","ecApi","res","json","console","log","data","length","e","handleOptionSelect","option","handleNextQuestion","correctAnswer","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","question","options","map","index","onClick","style","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","_c","$RefreshReg$"],"sources":["C:/Users/tejas/Documents/React and Node/fluency-track/src/Components/ErrorCorrection/ErrorCorrection.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ErrorCorrection.css';\r\n\r\nconst ErrorCorrection = (props) => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const api = await fetch(props.ecApi);\r\n                const res = await api.json();\r\n                console.log(res);\r\n                if (res && res.data && res.data.length > 0) {\r\n                    setQuestions(res.data);\r\n                    setLoading(false);\r\n                } else {\r\n                    console.log(\"No data received from the API.\");\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleOptionSelect = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n            setScore(score + 1);\r\n        }\r\n        setSelectedOption('');\r\n        setCurrentQuestion(currentQuestion + 1);\r\n    };\r\n    \r\n    const handleReset = () => {\r\n        setSelectedOption('');\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (isCompleted || currentQuestion >= questions.length) {\r\n        return (\r\n            <div className='box end'>\r\n                <h2>Test Completed!</h2>\r\n                <p>Your proficiency score: {score} / {questions.length}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h2 id='learn'>Test Your Error Correction Knowledge!</h2>\r\n            </div>\r\n            <div className='box'>\r\n                {/* <div className='que'>The question will be here?</div>\r\n                <div class=\"options\">\r\n                    <div class=\"option\">Option 1</div>\r\n                    <div class=\"option\">Option 2</div>\r\n                    <div class=\"option\">Option 3</div>\r\n                    <div class=\"option\">Option 4</div>\r\n                </div>\r\n                <div className='btns'>\r\n                    <div className='bt' style={{backgroundColor:\"orange\",borderBottomLeftRadius:'11px'}}>Reset</div>\r\n                    <div className='bt' style={{backgroundColor:\"green\"}} onClick={handleNextQuestion}>Save & Next</div>\r\n                    <div className='bt' style={{backgroundColor:\"red\",borderBottomRightRadius:\"11px\"}}>Exit</div>\r\n                </div> */}\r\n\r\n                <div className='que'>{questions[currentQuestion].question}</div>\r\n                <div className=\"options\">\r\n                    {questions[currentQuestion].options.map((option, index) => (\r\n                        <div className={`option ${selectedOption === option ? 'selected' : ''}`} onClick={() => handleOptionSelect(option)}>{option}</div>\r\n                    ))}\r\n                </div>\r\n                <div className='btns'>\r\n                    <div className='bt' style={{backgroundColor:\"orange\",borderBottomLeftRadius:'11px'}} onClick={handleReset}>Reset</div>\r\n                    <div className='bt' style={{backgroundColor:\"green\"}} onClick={handleNextQuestion}>Save & Next</div>\r\n                    <div className='bt' style={{backgroundColor:\"red\",borderBottomRightRadius:\"11px\"}} onClick={()=>setIsCompleted(true)}>Exit</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ErrorCorrection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}