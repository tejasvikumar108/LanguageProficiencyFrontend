{"ast":null,"code":"var _jsxFileName = \"D:\\\\6th sem\\\\LPU_Codes\\\\SemProjects\\\\React and Node\\\\fluency-track\\\\src\\\\Components\\\\Vocab\\\\Vocab.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Vocab = () => {\n  _s();\n  const questions = [{\n    id: 1,\n    question: 'What is the meaning of \"शुभ\"?',\n    options: ['Good', 'Bad', 'Happy', 'Sad'],\n    correctAnswer: 'Happy'\n  }, {\n    id: 2,\n    question: 'What does \"आशा\" mean?',\n    options: ['Hope', 'Fear', 'Joy', 'Anger'],\n    correctAnswer: 'Hope'\n  }];\n\n  // State for tracking current question and user's answers\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n\n  // Function to handle selecting an answer\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n\n  // Function to handle submitting answer and move to next question\n  const handleNextQuestion = () => {\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    setSelectedOption('');\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vocabulary Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), currentQuestion < questions.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Question \", currentQuestion + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                value: option,\n                checked: selectedOption === option,\n                onChange: () => handleOptionSelect(option)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Test Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", score, \" / \", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Vocab, \"an9AippwbGVJb48mIt6ZNDcWUiU=\");\n_c = Vocab;\nexport default Vocab;\nvar _c;\n$RefreshReg$(_c, \"Vocab\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Vocab","_s","questions","id","question","options","correctAnswer","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","handleOptionSelect","option","handleNextQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","type","value","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/6th sem/LPU_Codes/SemProjects/React and Node/fluency-track/src/Components/Vocab/Vocab.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Vocab = () => {\r\n    const questions = [\r\n        {\r\n            id: 1,\r\n            question: 'What is the meaning of \"शुभ\"?',\r\n            options: ['Good', 'Bad', 'Happy', 'Sad'],\r\n            correctAnswer: 'Happy'\r\n        },\r\n        {\r\n            id: 2,\r\n            question: 'What does \"आशा\" mean?',\r\n            options: ['Hope', 'Fear', 'Joy', 'Anger'],\r\n            correctAnswer: 'Hope'\r\n        }\r\n    ];\r\n\r\n    // State for tracking current question and user's answers\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [score, setScore] = useState(0);\r\n\r\n    // Function to handle selecting an answer\r\n    const handleOptionSelect = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    // Function to handle submitting answer and move to next question\r\n    const handleNextQuestion = () => {\r\n        if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n            setScore(score + 1);\r\n        }\r\n        setSelectedOption('');\r\n        setCurrentQuestion(currentQuestion + 1);\r\n    };\r\n\r\n  return (\r\n    <>\r\n        <div>\r\n            <h1>Vocabulary Test</h1>\r\n            {currentQuestion < questions.length ? (\r\n                <div>\r\n                    <h2>Question {currentQuestion + 1}</h2>\r\n                    <p>{questions[currentQuestion].question}</p>\r\n                    <ul>\r\n                        {questions[currentQuestion].options.map((option, index) => (\r\n                            <li key={index}>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        value={option}\r\n                                        checked={selectedOption === option}\r\n                                        onChange={() => handleOptionSelect(option)}\r\n                                    />\r\n                                    {option}\r\n                                </label>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <button onClick={handleNextQuestion}>Next</button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h2>Test Completed</h2>\r\n                    <p>Your score: {score} / {questions.length}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Vocab"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}