{"ast":null,"code":"var _jsxFileName = \"D:\\\\6th sem\\\\LPU_Codes\\\\SemProjects\\\\React and Node\\\\fluency-track\\\\src\\\\Components\\\\Vocab\\\\Vocab.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Vocab.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Vocab = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedOption, setSelectedOption] = useState('');\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const api = await fetch(\"/hindiVocab\");\n        const res = await api.json();\n        console.log(res);\n        if (res && res.data && res.data.length > 0) {\n          setQuestions(res.data);\n          setLoading(false);\n        } else {\n          console.log(\"No data received from the API.\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const handleNextQuestion = () => {\n    if (selectedOption === questions[currentQuestion].correctAnswer) {\n      setScore(score + 1);\n    }\n    setSelectedOption('');\n    setCurrentQuestion(currentQuestion + 1);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n  if (currentQuestion >= questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box end\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your proficiency score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"learn\",\n        children: \"Test Your Vocabulary Knowledge!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"que\",\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: questions[currentQuestion].options.map((option, index) =>\n        /*#__PURE__*/\n        // <div key={index} className=\"option\" onClick={() => handleOptionSelect(option) }>{option}</div>\n        _jsxDEV(\"div\", {\n          className: `option ${selectedOption === option ? 'selected' : ''}`,\n          onClick: () => handleOptionSelect(option),\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bt\",\n          style: {\n            backgroundColor: \"orange\",\n            borderBottomLeftRadius: '11px'\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bt\",\n          style: {\n            backgroundColor: \"green\"\n          },\n          onClick: handleNextQuestion,\n          children: \"Save & Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bt\",\n          style: {\n            backgroundColor: \"red\",\n            borderBottomRightRadius: \"11px\"\n          },\n          onClic: true,\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Vocab, \"R778Bo+cSTOMBOj58614xkRSvbc=\");\n_c = Vocab;\nexport default Vocab;\nvar _c;\n$RefreshReg$(_c, \"Vocab\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Vocab","_s","questions","setQuestions","currentQuestion","setCurrentQuestion","selectedOption","setSelectedOption","score","setScore","loading","setLoading","quizCompleted","setQuizCompleted","fetchData","api","fetch","res","json","console","log","data","length","e","handleOptionSelect","option","handleNextQuestion","correctAnswer","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","question","options","map","index","onClick","style","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","onClic","_c","$RefreshReg$"],"sources":["D:/6th sem/LPU_Codes/SemProjects/React and Node/fluency-track/src/Components/Vocab/Vocab.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Vocab.css';\r\n\r\nconst Vocab = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [score, setScore] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [quizCompleted, setQuizCompleted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const api = await fetch(\"/hindiVocab\");\r\n                const res = await api.json();\r\n                console.log(res);\r\n                if (res && res.data && res.data.length > 0) {\r\n                    setQuestions(res.data);\r\n                    setLoading(false);\r\n                } else {\r\n                    console.log(\"No data received from the API.\");\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleOptionSelect = (option) => {\r\n        setSelectedOption(option);\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        if (selectedOption === questions[currentQuestion].correctAnswer) {\r\n            setScore(score + 1);\r\n        }\r\n        setSelectedOption('');\r\n        setCurrentQuestion(currentQuestion + 1);\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (currentQuestion >= questions.length) {\r\n        return (\r\n            <div className='box end'>\r\n                <h2>Test Completed!</h2>\r\n                <p>Your proficiency score: {score} / {questions.length}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h2 id='learn'>Test Your Vocabulary Knowledge!</h2>\r\n            </div>\r\n            <div className='box'>\r\n                {/* <div className='que'>The question will be here?</div>\r\n                <div class=\"options\">\r\n                    <div class=\"option\">Option 1</div>\r\n                    <div class=\"option\">Option 2</div>\r\n                    <div class=\"option\">Option 3</div>\r\n                    <div class=\"option\">Option 4</div>\r\n                </div>\r\n                <div className='btns'>\r\n                    <div className='bt' style={{backgroundColor:\"orange\",borderBottomLeftRadius:'11px'}}>Reset</div>\r\n                    <div className='bt' style={{backgroundColor:\"green\"}} onClick={handleNextQuestion}>Save & Next</div>\r\n                    <div className='bt' style={{backgroundColor:\"red\",borderBottomRightRadius:\"11px\"}}>Exit</div>\r\n                </div> */}\r\n\r\n                <div className='que'>{questions[currentQuestion].question}</div>\r\n                <div className=\"options\">\r\n                    {questions[currentQuestion].options.map((option, index) => (\r\n                        // <div key={index} className=\"option\" onClick={() => handleOptionSelect(option) }>{option}</div>\r\n                        <div className={`option ${selectedOption === option ? 'selected' : ''}`} onClick={() => handleOptionSelect(option)}>{option}</div>\r\n                    ))}\r\n                </div>\r\n                <div className='btns'>\r\n                    <div className='bt' style={{backgroundColor:\"orange\",borderBottomLeftRadius:'11px'}}>Reset</div>\r\n                    <div className='bt' style={{backgroundColor:\"green\"}} onClick={handleNextQuestion}>Save & Next</div>\r\n                    <div className='bt' style={{backgroundColor:\"red\",borderBottomRightRadius:\"11px\"}} onClic>Exit</div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Vocab;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}